version: "3.7"
services:
  gost-mysql:
    image: mysql:8.0
    container_name: gost-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # 数据库密码
      MYSQL_DATABASE: ${DB_NAME} # 数据库名
      MYSQL_USER: ${DB_USER} # 数据库用户
      MYSQL_PASSWORD: ${DB_PASSWORD} # 数据库密码
      TZ: Asia/Shanghai
    volumes:
      - ${MYSQL_DATA}:/var/lib/mysql
      - ./gost.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - gost-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10

  gost-redis:
    image: redis:alpine
    container_name: gost-redis
    restart: unless-stopped
    networks:
      - gost-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  gost-backend:
    build:
      context: ../backend
      dockerfile: ../backend/Dockerfile
    container_name: gost-backend
    restart: unless-stopped
    environment:
      DB_HOST: gost-mysql # 数据库地址
      DB_NAME: ${DB_NAME} # 数据库名
      DB_USER: ${DB_USER} # 数据库用户
      DB_PASSWORD: ${DB_PASSWORD} # 数据库密码
      JWT_SECRET: ${JWT_SECRET} # JWT密钥
      LOG_DIR:  /app/logs # 日志目录(不可修改)
      SERVER_ADDR: ${SERVER_HOST} # 服务器地址  ip:port 不能套cdn  用于节点连接
    ports:
      - "6365:6365"
    volumes:
      - ${BACKEND_DATA}:/app/logs
    depends_on:
      gost-mysql:
        condition: service_healthy
      gost-redis:
        condition: service_healthy
    networks:
      - gost-network
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://localhost:6365/flow/test || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: ../frontend
      args:
        VUE_APP_API_URL: ${VUE_APP_API_URL}
        VUE_APP_WS_URL: ${VUE_APP_WS_URL}
      dockerfile: ../frontend/Dockerfile
    container_name: gost-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      BACKEND_HOST: gost-backend # 后端地址
      BACKEND_PORT: 6365 # 后端端口
    depends_on:
      gost-backend:
        condition: service_healthy
    networks:
      - gost-network

networks:
  gost-network:
    driver: bridge 